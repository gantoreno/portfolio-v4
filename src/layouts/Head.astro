---
import "../styles/index.css";

import { ViewTransitions } from "astro:transitions";

import {
  DEFAULT_TITLE,
  DEFAULT_DESCRIPTION,
  DEFAULT_KEYWORDS,
} from "../constants";

type Props = {
  title?: string;
  description?: string;
  keywords?: string[];
};

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title = DEFAULT_TITLE,
  description = DEFAULT_DESCRIPTION,
  keywords = DEFAULT_KEYWORDS,
} = Astro.props;
---

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="generator" content={Astro.generator} />
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />

  <link rel="icon" type="image/svg+xml" href="/logo.svg" />
  <link rel="sitemap" href="/sitemap-index.xml" />

  <link rel="canonical" href={canonicalURL} />

  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta
    property="og:image"
    content={new URL("/assets/img/og.png", Astro.url)}
  />

  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta
    property="twitter:image"
    content={new URL("/assets/img/og.png", Astro.url)}
  />

  <meta name="title" content={title} />
  <meta name="description" content={description} />
  <meta name="keywords" content={keywords.join(", ").toLowerCase()} />

  <meta name="og:title" content={title} />
  <meta name="og:description" content={description} />

  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />

  <title>{title}</title>

  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

  <link
    rel="preload"
    as="style"
    href="https://fonts.googleapis.com/css2?family=Figtree:wght@400;600&display=swap"
  />
  <link
    rel="preload"
    as="style"
    href="https://fonts.googleapis.com/css2?&family=Source+Serif+4:ital,wght@1,400;1,600&display=swap"
  />

  <link
    rel="stylesheet"
    media="print"
    onload="this.onload = null; this.removeAttribute('media'); "
    href="https://fonts.googleapis.com/css2?family=Figtree:wght@400;600&display=swap"
  />
  <link
    rel="stylesheet"
    media="print"
    onload="this.onload = null; this.removeAttribute('media');"
    href="https://fonts.googleapis.com/css2?family=Source+Serif+4:ital,opsz,wght@0,8..60,400;0,8..60,600;1,8..60,400;1,8..60,600&display=swap"
  />

  <ViewTransitions />

  <!-- Build article animations -->
  <script>
    function buildArticleAnimations() {
      var article = document.getElementById("article");
      var footer = document.getElementById("footer");

      if (article) {
        var stagger = document
          .getElementById("controller")
          .classList.contains("no-animate")
          ? 0
          : 1;

        try {
          article.style = "opacity: 1";

          for (let node of article.childNodes) {
            if (
              !(
                node instanceof HTMLScriptElement ||
                node instanceof HTMLStyleElement
              ) &&
              node.tagName
            ) {
              node.style = "--stagger:" + stagger;
              node.dataset.animate = true;

              if (stagger < 7) {
                stagger += 1;
              }
            }
          }
        } catch (e) {
          //
        }

        footer.style = "--stagger:" + (stagger + 1);
        footer.dataset.animate = true;
      }

      const animatedElementsCount =
        document.querySelectorAll("[data-animate]").length;

      footer.style =
        "--stagger:" + (animatedElementsCount < 7 ? animatedElementsCount : 8);
      footer.dataset.animate = true;

      footer.addEventListener(
        "animationend",
        () => {
          document.getElementById("controller").classList.add("no-animate");
        },
        { once: true }
      );

      footer.addEventListener(
        "animationcancel",
        () => {
          document.getElementById("controller").classList.add("no-animate");
        },
        { once: true }
      );
    }

    document.addEventListener("astro:page-load", () => {
      buildArticleAnimations();
    });

    document.addEventListener("astro:after-swap", () => {
      buildArticleAnimations();
    });
  </script>
</head>
