---
import { type CollectionEntry, getCollection } from "astro:content";

import { format } from "date-fns";

import Html from "../../layouts/Html.astro";
import Head from "../../layouts/Head.astro";
import Body from "../../layouts/Body.astro";

import Header from "../../components/Header.astro";
import Snippet from "../../components/Snippet.astro";
import Blockquote from "../../components/Blockquote.astro";
import BulletedList from "../../components/BulletedList.astro";

import PrimaryHeading from "../../components/PrimaryHeading.astro";
import SecondaryHeading from "../../components/SecondaryHeading.astro";

import Bold from "../../components/Bold.astro";
import Mono from "../../components/Mono.astro";
import Italic from "../../components/Italic.astro";

import Figure from "../../components/Figure.astro";
import Entry from "../../components/Entry.astro";
import Paragraph from "../../components/Paragraph.astro";

import Signature from "../../components/Signature.astro";

export const prerender = true;

type Post = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post,
      otherPosts: posts
        .filter((p) => p.slug !== post.slug)
        .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
        .slice(0, 3),
    },
  }));
}

const { post, otherPosts } = Astro.props;

const { Content } = await post.render();
---

<Html>
  <Head>
    <meta name="title" content={post.data.title} />
    <meta name="description" content={post.data.description} />
    <meta name="keywords" content={post.data.tags.join(", ").toLowerCase()} />

    <meta name="og:title" content={post.data.title} />
    <meta name="og:description" content={post.data.description} />

    <meta name="twitter:title" content={post.data.title} />
    <meta name="twitter:description" content={post.data.description} />

    <title>{post.data.title}</title>
  </Head>
  <Body>
    <Header>
      <PrimaryHeading style="--stagger:1" data-animate>
        {post.data.title}
      </PrimaryHeading>
      <Paragraph class="!text-disabled" style="--stagger:2" data-animate>
        {format(post.data.date, "MMM d, yyyy")}
      </Paragraph>
    </Header>
    <div style="--stagger:3" data-animate>
      <Content
        components={{
          p: Paragraph,
          img: Figure,
          h1: PrimaryHeading,
          h2: SecondaryHeading,
          ul: BulletedList,
          strong: Bold,
          em: Italic,
          code: Mono,
          blockquote: Blockquote,
          pre: Snippet,
        }}
      />
    </div>
    <SecondaryHeading style="--stagger:4" data-animate>
      Continue reading
    </SecondaryHeading>
    {
      otherPosts.map((post: Post, i: number) => (
        <div style={"--stagger:" + ((5 + i) as number)} data-animate>
          <Entry
            title={post.data.title}
            description={post.data.description}
            link={"/blog/" + post.slug}
          />
        </div>
      ))
    }
    <div
      style={"--stagger:" + ((5 + otherPosts.length) as number)}
      data-animate
    >
      <Signature />
    </div>
  </Body>
</Html>
