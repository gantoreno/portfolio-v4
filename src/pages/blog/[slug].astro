---
import { type CollectionEntry, getCollection } from "astro:content";

import { format } from "date-fns";

import Html from "../../layouts/Html.astro";
import Head from "../../layouts/Head.astro";
import Body from "../../layouts/Body.astro";

import Entry from "../../components/custom/Entry.astro";

import Signature from "../../components/extras/Signature.astro";

import Blockquote from "../../components/structure/Blockquote.astro";
import BulletedList from "../../components/structure/BulletedList.astro";
import NumberedList from "../../components/structure/NumberedList.astro";
import Snippet from "../../components/structure/Snippet.astro";
import SuperIndex from "../../components/structure/SuperIndex.astro";

import PrimaryHeading from "../../components/headings/PrimaryHeading.astro";
import SecondaryHeading from "../../components/headings/SecondaryHeading.astro";

import Figure from "../../components/structure/Figure.astro";
import Paragraph from "../../components/structure/Paragraph.astro";

import Bold from "../../components/typography/Bold.astro";
import Italic from "../../components/typography/Italic.astro";
import Mono from "../../components/typography/Mono.astro";

export const prerender = true;

type Post = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post,
      otherPosts: posts
        .filter((p) => p.slug !== post.slug)
        .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
        .slice(0, 3),
    },
  }));
}

const { post, otherPosts } = Astro.props;

const { Content } = await post.render();
---

<Html>
  <Head
    title={post.data.title}
    description={post.data.description}
    keywords={post.data.tags}
  />
  <Body>
    <article id="article">
      <PrimaryHeading class="mt-[60px]">
        {post.data.title}
      </PrimaryHeading>
      <Paragraph class="!text-disabled mb-[60px]">
        {format(post.data.date, "MMM d, yyyy")}
      </Paragraph>
      <div
        id="rendered-content"
        class="[&>p:first-child::first-letter]:text-primary [&>p:first-child::first-letter]:initial-letter-2 [&>p]:font-serif [&>ul>li]:font-serif [&>[data-footnotes]>ol>li>p]:font-serif"
      >
        <Content
          components={{
            blockquote: Blockquote,
            code: Mono,
            em: Italic,
            h1: PrimaryHeading,
            h2: SecondaryHeading,
            img: Figure,
            ol: NumberedList,
            p: Paragraph,
            pre: Snippet,
            strong: Bold,
            sup: SuperIndex,
            ul: BulletedList,
          }}
        />
      </div>
      <SecondaryHeading>Continue reading</SecondaryHeading>
      {
        otherPosts.map((post: Post) => (
          <Entry
            title={post.data.title}
            description={post.data.description}
            link={"/blog/" + post.slug}
          />
        ))
      }
      <Signature />
    </article>
  </Body>
</Html>
